---
name: Development

on:
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - test-cov
          - lint
          - format
          - build
          - docs
          - clean
      python_version:
        description: 'Python version'
        required: false
        default: '3.11'
        type: string

jobs:
  run-task:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version || '3.11' }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: >-
            ${{ runner.os }}-pip-${{ inputs.python_version || '3.11' }}-${{
            hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ inputs.python_version || '3.11' }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run test
        if: inputs.task == 'test'
        run: |
          pytest

      - name: Run test with coverage
        if: inputs.task == 'test-cov'
        run: |
          pytest --cov=github_discussions --cov-report=html --cov-report=term

      - name: Run linting
        if: inputs.task == 'lint'
        run: |
          flake8 github_discussions tests examples
          mypy github_discussions

      - name: Format code
        if: inputs.task == 'format'
        run: |
          black github_discussions tests examples
          isort github_discussions tests examples

      - name: Build package
        if: inputs.task == 'build'
        run: |
          python -m build
          twine check dist/*

      - name: Build documentation
        if: inputs.task == 'docs'
        run: |
          pip install sphinx sphinx-rtd-theme
          sphinx-build -b html docs docs/_build/html

      - name: Clean up
        if: inputs.task == 'clean'
        run: |
          rm -rf build/
          rm -rf dist/
          rm -rf *.egg-info/
          rm -rf .pytest_cache/
          rm -rf .coverage
          rm -rf htmlcov/
          find . -type d -name __pycache__ -exec rm -rf {} +
          find . -type f -name "*.pyc" -delete

      - name: Upload build artifacts
        if: inputs.task == 'build'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Upload coverage report
        if: inputs.task == 'test-cov'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

      - name: Upload documentation
        if: inputs.task == 'docs'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build/html/
